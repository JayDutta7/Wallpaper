apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'



android {
    signingConfigs {
        config {
            /*keyAlias 'key0'
            keyPassword 'testtest'
            storeFile file('/home/jay/release.jks')
            storePassword 'testtest'*/
        }
    }
    compileSdkVersion rootProject.ext.targetSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "app.matrix.wallpaperpexels"
        minSdkVersion rootProject.ext.minSdkVersion//MinSdk
        targetSdkVersion rootProject.ext.targetSdkVersion//MaxSdk
        versionCode rootProject.ext.versionCode//VersionCode
        versionName rootProject.ext.versionName//VersionName
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.config//jUnit Configaration
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled true//if true the skip the unused methods
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            shrinkResources true//Shrinking Resources
            signingConfig signingConfigs.config
        }
        debug {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //  signingConfig signingConfigs.config
            //Pexles key
            buildConfigField 'String', "ApiKey", WallPaperPexels_apiKey
            resValue 'string', "api_key", WallPaperPexels_apiKey
            //googletoken
            buildConfigField 'String', "Token", Requested_token
            resValue 'string', "token", Requested_token
            //unspalsh access key
            /*buildConfigField 'String','AccessKey',Unsplash_AccessKey
            resValue 'String','accesskey',Unsplash_AccessKey*/

        }

    }
    /*Java 1.8 support*/
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8

    }
    /*Android Extensions plugin includes several experimental features
     such as LayoutContainer support and a Parcelable implementation generator.*/
    androidExtensions {
        experimental = true
    }

    kotlin {
        experimental {
            coroutines "enable"
        }
    }


}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //Kotlin & Coroutines
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    /*Main interface for using coroutines in Kotlin*/
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.ext.coroutinesCore"
    /*Support for the Android Main thread in coroutines*/
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.ext.coroutinesCore"

    implementation "androidx.appcompat:appcompat:$rootProject.ext.appCompatX"
    implementation "androidx.core:core:$rootProject.ext.appCompatCoreKtx"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.ext.constainLayout"
    implementation "androidx.viewpager:viewpager:$rootProject.ext.appCompatXviewPager"
    /*Material Components*/
    implementation "com.google.android.material:material:$rootProject.ext.materialDesign"
    

    //Multidex
    implementation "androidx.multidex:multidex:$rootProject.ext.multidex"

    // Room dependencies(Database)
    implementation "androidx.room:room-runtime:$rootProject.ext.roomDatabase"
    kapt "androidx.room:room-compiler:$rootProject.ext.roomDatabase"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$rootProject.ext.roomDatabase"


    //Glide
    implementation "com.github.bumptech.glide:glide:$rootProject.ext.glidE"
    kapt "com.github.bumptech.glide:compiler:$rootProject.ext.glidE"//annotaionationprocessor for java kapt for kotlin
    kapt "com.github.bumptech.glide:annotations:$rootProject.ext.glidE"
    implementation "com.github.bumptech.glide:okhttp3-integration:$rootProject.ext.glidE"


    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofit"
    implementation "com.google.code.gson:gson:$rootProject.ext.googleGson"
    implementation "com.squareup.retrofit2:converter-moshi:$rootProject.ext.retrofit"
    ///Coroutines Adapter
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$rootProject.ext.retroFitCorotineAdapter"


    //debug
    implementation "com.squareup.okhttp3:okhttp:$rootProject.ext.okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.httpIntaceptor"

    //Photozooom
    implementation "com.github.chrisbanes:PhotoView:$rootProject.ext.photoView"

    //Dimen Lib
    implementation "com.intuit.sdp:sdp-android:$rootProject.ext.dimenLib"

    //Dexter Permission Runtime
    implementation "com.karumi:dexter:$rootProject.ext.dexterPermissionLib"

    //CircleImageview
    implementation "de.hdodenhof:circleimageview:$rootProject.ext.circleImageView"

    //Google sign in
    implementation "com.google.android.gms:play-services-auth:$rootProject.ext.gmsPlayServiceAuth"
    //Google mobile Ad
    //implementation "com.google.android.gms:play-services-ads:$project.gmsMobileAd"

    //Firebase
    implementation "com.google.firebase:firebase-core:$rootProject.ext.firebaseCore"
    implementation "com.google.firebase:firebase-auth:$rootProject.ext.firebaseAuth"
    implementation "com.google.firebase:firebase-database:$rootProject.ext.firebaseDatabase"


    //Testing
    testImplementation "junit:junit:$rootProject.ext.jUnit"
    androidTestImplementation "androidx.test:runner:$rootProject.ext.testRunner"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.ext.expressoCore"

    //Indicator
    implementation "me.relex:circleindicator:$rootProject.ext.circleIndicator"

    //FlexBoxLayout(Google)
    /*implementation "com.google.android:flexbox:$rootProject.ext.flexbox"*/


    //ViewModel & LiveData
    /*implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.ext.lifecycle_version"*/



}


apply plugin: 'com.google.gms.google-services'
